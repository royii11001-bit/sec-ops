name: SecOps CD - Secure Deployment Pipeline

on:
  workflow_run:
    workflows: ["SecOps CI - Security Validation & Build"]
    types: [completed]
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE_NAME: secops-github-scanner

jobs:
  dynamic-security-deploy:
    name: Dynamic Security Testing & Secure Deployment
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Pull signed image
      run: |
        IMAGE_TAG="${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
        echo "Pulling signed image: $IMAGE_TAG"
        docker pull $IMAGE_TAG

    - name: DAST - Dynamic Application Security Testing
      run: |
        IMAGE_TAG="${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
        
        echo "Starting application for DAST..."
        docker run -d --name dast-app -p 8080:8000 $IMAGE_TAG
        sleep 15
        
        # Quick health check
        curl -f http://localhost:8080/ || exit 1
        echo "Application is running"
        
        echo "Running OWASP ZAP DAST scan..."
        docker run --rm --network host \
          owasp/zap2docker-stable zap-baseline.py \
          -t http://localhost:8080 \
          -J zap-report.json \
          -r zap-report.html || true
        
        echo "DAST scan completed"
        
        docker stop dast-app
        docker rm dast-app

    - name: Deploy with Security Hardening
      run: |
        IMAGE_TAG="${{ env.REGISTRY }}/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
        
        echo "Deploying securely..."
        
        # Stop existing
        docker stop secops-app || true
        docker rm secops-app || true
        
        # Deploy with security best practices
        docker run -d \
          --name secops-app \
          --restart unless-stopped \
          --user 1000:1000 \
          --read-only \
          --tmpfs /tmp:noexec,nosuid,size=100m \
          --security-opt no-new-privileges:true \
          --cap-drop ALL \
          --cap-add NET_BIND_SERVICE \
          --memory 512m \
          -p 8000:8000 \
          $IMAGE_TAG
        
        echo "Deployed securely"

    - name: Health Check
      run: |
        echo "Post-deployment health check..."
        sleep 10
        
        for i in {1..5}; do
          if curl -f http://localhost:8000/; then
            echo "Application healthy"
            break
          fi
          echo "Waiting... ($i/5)"
          sleep 5
        done
        
        # Verify non-root
        USER_CHECK=$(docker exec secops-app whoami)
        if [ "$USER_CHECK" != "root" ]; then
          echo "Running as non-root: $USER_CHECK"
        else
          echo "Security issue: Running as root!"
          exit 1
        fi

